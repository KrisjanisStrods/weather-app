{"version":3,"sources":["Components/Collapsible.jsx","Components/Loader.jsx","Components/NoData.jsx","data.js","App.js","reportWebVitals.js","index.js"],"names":["HourlyTemp","temp","hour","adjustedHour","className","Collapsible","day","dayTemp","nightTemp","avgHumidity","tempByHour","useState","isShown","setIsShown","adjustedDayTemp","adjustedNighTemp","adjustedAvgHumidity","onClick","prev","map","Loader","NoData","process","REACT_APP_API_KEY","REACT_APP_DEFAULT_LAT","REACT_APP_DEFAULT_LON","DISPLAYED_HOURS","contstructReoccuringItem","entry","Date","dt","getHours","Math","round","main","humidity","constructNewDay","getDay","recurring","sortDataByDays","currentDay","list","sortedList","i","length","entryDay","push","slice","getAverage","tempList","reduce","a","b","parseData","acc","dayTemperatures","nightTemperatures","avgDayTemp","avgNightTemp","filter","item","includes","getLocationData","cb","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","location","lat","coords","latitude","lon","longitude","console","error","message","window","fetch","then","res","json","data","parsedData","DataLayer","App","setData","useEffect","receivedData","locationDataFetchInterval","setInterval","clearInterval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfaa4425.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction HourlyTemp({\r\n  temp=\"N/A\",\r\n  hour,\r\n}) {\r\n  const adjustedHour = hour >= 0 && hour <= 23 ? `${hour}:00` : \"N/A\";\r\n  return (\r\n    <>\r\n      <div className=\"temperature-by-hour\">\r\n        <div>{temp}°C</div>\r\n        <div className=\"hour\">{adjustedHour}</div>\r\n      </div>\r\n      <div className=\"spacer\"/>  \r\n    </>\r\n  )\r\n}\r\n\r\nfunction Collapsible ({\r\n  day,\r\n  dayTemp,\r\n  nightTemp,\r\n  avgHumidity,\r\n  tempByHour = [],\r\n}) {\r\n  const [isShown, setIsShown] = useState(false)\r\n\r\n  // In case of falsey value, replace parameter with -\r\n  const adjustedDayTemp = dayTemp ? `${dayTemp}°C` : '-';\r\n  const adjustedNighTemp = dayTemp ? `${nightTemp}°C` : '-';\r\n  const adjustedAvgHumidity = avgHumidity ? `${avgHumidity}%` : '-';\r\n\r\n  return (\r\n    <div className={isShown ? \"collapsible-card show\" : \"collapsible-card\"}>\r\n      <div className=\"row light\" onClick={() => setIsShown(prev => !prev)}>\r\n        <div className=\"title\">{day}</div>\r\n        <div className=\"general-info\">\r\n          <div>\r\n            <span className=\"day-temperature\">{adjustedDayTemp}</span>\r\n            <span className=\"night-temperature\"> / {adjustedNighTemp}</span>\r\n          </div>\r\n          <div className=\"humidity\" >Avg. Humidity: {adjustedAvgHumidity}</div>\r\n        </div>\r\n        <div className=\"spacer\"/>\r\n        <div className=\"misc\">\r\n          <span className={isShown ? \"icon up\" : \"icon\"}>▼</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"title\" />\r\n        { tempByHour.map(({ temp, hour }) => <HourlyTemp key={day+hour} temp={temp} hour={hour} /> ) }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Collapsible;","import React from \"react\";\r\n\r\nfunction Loader() {\r\n    return <div className=\"loading\">...acquiring location</div>\r\n}\r\n\r\nexport default Loader;","import React from \"react\";\r\n\r\nfunction NoData() {\r\n    return <h1>Oops. Something went wrong.</h1>\r\n}\r\n\r\nexport default NoData;","const {\r\n  REACT_APP_API_KEY,\r\n  REACT_APP_DEFAULT_LAT,\r\n  REACT_APP_DEFAULT_LON,\r\n} = process.env\r\n\r\nconst DISPLAYED_HOURS = [0, 5, 6, 11, 12, 17, 18, 23];\r\n\r\nfunction contstructReoccuringItem(entry) {\r\n  return {\r\n    hour: new Date(entry.dt * 1000).getHours(),\r\n    temp: Math.round(entry.main.temp),\r\n    humidity: entry.main.humidity,\r\n  }\r\n}\r\n\r\nfunction constructNewDay(entry) {\r\n  const dayMapping = {\r\n    1: \"MONDAY\",\r\n    2: \"TUESDAY\",\r\n    3: \"WEDNESDAY\",\r\n    4: \"THURSDAY\",\r\n    5: \"FRIDAY\",\r\n    6: \"SATURDAY\",\r\n    7: \"SUNDAY\",\r\n  }\r\n  \r\n  return {\r\n    day: dayMapping[new Date(entry.dt * 1000).getDay()],\r\n    recurring: [ contstructReoccuringItem(entry) ],\r\n  }\r\n}\r\n\r\n/**\r\n* Function that sorts given list data by days\r\n*/\r\nfunction sortDataByDays(list = []) {\r\n  let currentDay;\r\n  const sortedList = [];\r\n\r\n  for(let i = 0; i < list.length; i++) {\r\n    const entry = list[i];\r\n    const entryDay = new Date(entry.dt * 1000).getDay();\r\n\r\n    if (entryDay === currentDay) {\r\n      sortedList[sortedList.length-1].recurring.push(contstructReoccuringItem(entry))\r\n    } else {\r\n      sortedList.push(constructNewDay(entry))\r\n      currentDay = entryDay;\r\n    }\r\n  }\r\n\r\n  // Return only 5 days\r\n  return sortedList.slice(0, 5);\r\n}\r\n\r\nfunction getAverage(tempList) {\r\n  if (tempList.length > 0) {\r\n    return Math.round(tempList.reduce((a, b) => a + b, 0) / tempList.length)\r\n  }\r\n}\r\n\r\n/**\r\n* @param {Array} sortedList Array of object with keys: day, recurring\r\n* @returns {Array} Array of object with keys: day, recurring, avgDayTemp, avgNightTemp, avgHumidity\r\n*/\r\nfunction parseData(sortedList) {\r\n  return sortedList.map(entry => {\r\n    const { dayTemperatures, nightTemperatures, humidity } = entry.recurring\r\n      .reduce((acc, { hour, temp, humidity } ) =>  {\r\n        if (hour >= 8 && hour <= 18) {\r\n          acc.dayTemperatures.push(temp)\r\n        } else {\r\n          acc.nightTemperatures.push(temp)\r\n        }\r\n        acc.humidity.push(humidity);\r\n\r\n        return acc;\r\n      }, { dayTemperatures: [], nightTemperatures: [], humidity: [] });\r\n\r\n    return {\r\n      ...entry,\r\n      avgDayTemp: getAverage(dayTemperatures),\r\n      avgNightTemp: getAverage(nightTemperatures),\r\n      avgHumidity: getAverage(humidity),\r\n      recurring: entry.recurring.filter(item => DISPLAYED_HOURS.includes(item.hour))\r\n    }\r\n  })\r\n}\r\n\r\nexport async function getLocationData(cb) {\r\n  // Get location\r\n  let location;\r\n  try {\r\n    const position = await new Promise((resolve, reject) => \r\n      navigator.geolocation.getCurrentPosition(resolve, reject)\r\n    );\r\n    location = {\r\n      lat: position.coords.latitude,\r\n      lon: position.coords.longitude,\r\n    }\r\n  } catch (err) {\r\n    console.error(err.message);\r\n    location = {\r\n      lat: REACT_APP_DEFAULT_LAT,\r\n      lon: REACT_APP_DEFAULT_LON,\r\n    }\r\n  }\r\n\r\n  // Get location based data\r\n  window\r\n    .fetch(\r\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${location.lat}&lon=${location.lon}&appid=${REACT_APP_API_KEY}&units=metric`,\r\n    )\r\n    .then((res) => res.json())\r\n    .then(data => {\r\n      const sortedData = sortDataByDays(data.list);\r\n      const parsedData = parseData(sortedData);\r\n      cb(parsedData)\r\n    })\r\n}","import React, { useState, useEffect } from 'react';\nimport { Collapsible, Loader, NoData } from './Components';\nimport { getLocationData } from './data';\nimport './App.scss';\n\n// In case of wrong api credentials or OpenWeatherMap being down, fallback to <NoData />\nfunction DataLayer({ data }) {\n  return data.length > 0 \n    ? data.map(({ day, avgDayTemp, avgNightTemp, avgHumidity, recurring }) => (\n      <Collapsible\n        key={day}\n        day={day}\n        dayTemp={avgDayTemp}\n        nightTemp={avgNightTemp}\n        avgHumidity={avgHumidity}\n        tempByHour={recurring}\n      />\n    ))\n    : <NoData />\n}\n\nfunction App() {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n\n    // Initial data fetch on page mount\n    getLocationData((receivedData) => setData(receivedData));\n\n    // Add interval for data fetch, to keep data current\n    const locationDataFetchInterval = setInterval(() => {\n      getLocationData((receivedData) => setData(receivedData));\n    }, 30 * 60 * 1000)\n\n    // Clear data fetch interval on page un-mount\n    return () => clearInterval(locationDataFetchInterval);\n\n  }, []);\n  \n  return (\n    <div className=\"main-wrapper\">\n      { data ? <DataLayer data={data} /> :  <Loader /> }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}